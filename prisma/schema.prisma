generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider          = "postgresql"
  url               = env("DATABASE_URL")
  shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model User {
  id          String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String
  email       String
  avatar      String
  Participant Participant[]
  Playday     Playday[]
}

model Participant {
  id        String  @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  userId    String  @db.Uuid
  playdayId String  @db.Uuid
  status    String
  playday   Playday @relation(fields: [playdayId], references: [id])
  user      User    @relation(fields: [userId], references: [id])
}

model Playday {
  id                    String        @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  date                  String
  adminId               String        @db.Uuid
  address_district      String
  address_street        String
  address_city          String
  address_state         String
  lot1_price            Decimal
  lot1_vacancy_existent Int
  lot1_vacancy_filled   Int
  lot2_price            Decimal?
  lot2_vacancy_existent Int?
  lot2_vacancy_filled   Int?
  lot3_price            Decimal?
  lot3_vacancy_existent Int?
  lot3_vacancy_filled   Int?
  lot4_price            Decimal?
  lot4_vacancy_existent Int?
  lot4_vacancy_filled   Int?
  lot5_price            Decimal?
  lot5_vacancy_existent Int?
  lot5_vacancy_filled   Int?
  gallery               String[]
  admin                 User          @relation(fields: [adminId], references: [id])
  Participant           Participant[]
}
